{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACNA;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;ACN0C;AACI;AAK9C,kDAAkD;AAElD,IAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,IAAI,SAAS,GAAG,CAAC,CAAC;AAClB,IAAI,QAAQ,CAAC;AACb,IAAI,UAAU,GAAG,eAAe,CAAC;AAUjC,IAAa,QAAQ;IAKnB,kBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QAHzC,qHAAqH;QACrH,gBAAW,GAAW,UAAU,CAAC;IAGjC,CAAC;IAED,0BAAO,GAAP,UAAQ,CAAC;QAEP,IAAI,GAAG,CAAC;QAER,IAAI,OAAO,CAAC;QAEZ,8CAA8C;QAE9C,iBAAiB,QAAQ;YAEvB,8GAA8G;YAC9G,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;YACtC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;YAEpC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAEjC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACxD,MAAM,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE;gBACzC,IAAI,EAAE,EAAE;aACT,CAAC,CAAC;YACH,WAAW,EAAE,CAAC;YACd,UAAU,EAAE,CAAC;QAEf,CAAC;QAED;YACE,+EAA+E;QACjF,CAAC;QAED,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAG/D,oEAAoE;QACpE,yGAAyG;QACzG;YACE,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE;YAC9B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,wCAAwC,GAAG,SAAS,GAAG,OAAO,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;YAClG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEf,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACjC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;YAErC,UAAU,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAEjC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC;QAC3C,CAAC;QAED,mDAAmD;QACnD;YAEE,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE;YAC9B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,qDAAqD,GAAG,QAAQ,GAAG,OAAO,GAAG,SAAS,GAAG,yCAAyC,EAAE,KAAK,CAAC,CAAC;YAC3J,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEf,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACjC,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,OAAO,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IACH,eAAC;AAAD,CAAC;AApEY,QAAQ;IARpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KAEzB,CAAC;aASyC;AA+D1C;OApEoB;;;;;;;;;;;;ACrBsD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AAEb;AACM;AAsB9C,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IApBrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;YACL,kEAAQ;SACT;QACD,OAAO,EAAE;YACP,gFAAa;YACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,CAAC;SAC3B;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;YACL,kEAAQ;SACT;QACD,SAAS,EAAE;YACT,2EAAS;YACT,iFAAY;YACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;SACrD;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC7BoB;AACD;AACY;AACM;AAEb;AAI9C,IAAa,KAAK;IAGhB,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AAXY,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAIgF;AAQjF;SAXY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 106;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 106\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 147;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 147\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { } from '@types/googlemaps';\n\n\n\n// I commented this so you better be looking at it\n\nvar latitude = 0;\nvar longitude = 0;\nvar postCode;\nvar thisString = \"I am a string\";\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n\n})\n\n\n\nexport class HomePage {  \n\n  //  https://stackoverflow.com/questions/34714462/updating-variable-changes-in-components-from-a-service-with-angular2\n  appPostCode: string = thisString;\n\n  constructor(public navCtrl: NavController) {\n  }  \n\n  initMap(e) {\n\n    var map;\n    \n    var weather;\n\n    // this method gets the longitude and latitude\n\n    function showMap(position) {\n\n      //I would like to perform the below 2 lines of code in a seperate function however I couldnt figure out how to\n      longitude = position.coords.longitude;\n      latitude = position.coords.latitude;\n\n      console.log(longitude, latitude);\n\n      map = new google.maps.Map(document.getElementById('map'), {\n        center: { lat: latitude, lng: longitude },\n        zoom: 15\n      });\n      getPostCode();\n      getWeather();\n\n    }\n\n    function dontShowMap() {\n      //something to tell them theyve been naughty not allowing me to see wheere i am\n    }\n\n    navigator.geolocation.getCurrentPosition(showMap, dontShowMap);\n\n\n    // gets postcode based upon lat+lon from postcodes.io or postcode.io\n    // didnt think i could get the weather from lon and lat so i did this first, didnt actually need to do it\n    function getPostCode() {\n      var req = new XMLHttpRequest()\n      req.open(\"GET\", \"http://api.postcodes.io/postcodes?lon=\" + longitude + \"&lat=\" + latitude, false);\n      req.send(null);\n\n      var r = JSON.parse(req.response);\n      postCode = r.result[0].postcode;\n      console.log(\"postcode: \" + postCode);    \n\n      thisString = postCode.toString();\n\n      console.log(\"thisString: \" + thisString);\n    }\n\n    // gets weather based upon lon+lat from openweather\n    function getWeather() {\n\n      var req = new XMLHttpRequest()\n      req.open(\"GET\", \"http://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&APPID=7f6c7a16080ef8a18af35d11d9a891bb\", false);\n      req.send(null);\n\n      var r = JSON.parse(req.response);\n      var weather = r.weather[0].main;\n      console.log(\"weather is:\" + weather);\n    }   \n  }  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}